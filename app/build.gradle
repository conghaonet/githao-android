def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

// To generate Java code suitable for Java or mixed Java and Kotlin modules
// apply plugin: "androidx.navigation.safeargs"

// to generate Kotlin code suitable for Kotlin-only
apply plugin: "androidx.navigation.safeargs.kotlin"


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.app2m.githaoa"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    if (localProperties.getProperty('key.storeFile') != null) {
        signingConfigs {
            app2m {
                storeFile file(localProperties.getProperty('key.storeFile'))
                storePassword localProperties.getProperty('key.storePassword')
                keyAlias localProperties.getProperty('key.keyAlias')
                keyPassword localProperties.getProperty('key.keyPassword')
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (localProperties.getProperty('key.storeFile') != null) {
                signingConfig signingConfigs.app2m
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (localProperties.getProperty('key.storeFile') != null) {
                signingConfig signingConfigs.app2m
            }
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/kotlin']
        }
    }
    dataBinding {
        enabled = true
    }
    //@Parcelize 注解需要设置：experimental = true
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
//    vectorDrawables.useSupportLibrary = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.appcompat:appcompat-resources:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.core:core:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.1.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.0-alpha03'
    implementation 'com.google.android.material:material:1.0.0'
    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation 'com.google.code.gson:gson:2.8.5'
    //Material Components
    implementation 'com.google.android.material:material:1.1.0-beta02'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation project(":network")
    implementation project(":base")

}
